%% Computing prices American options for pictures in notes% Updated to use GAIL optPayoff classgail.InitializeWorkspaceDisplay %initialize the workspace and the display parameters%% Parameter set-upinp.timeDim.timeVector = 1/52:1/52:1/2; %weekly monitoring for 6 monthsinp.assetParam.initPrice = 80; %initial stock priceinp.assetParam.interest = 0.05; %risk-free interest rateinp.assetParam.volatility = 0.5; %volatilityinp.payoffParam.strike = 100; %strike priceinp.payoffParam.optType = {'american'}; %put optioninp.payoffParam.putCallType = {'put'}; %put optioninp.priceParam.absTol = 0.1; %absolute tolerance%% Generating asset paths and payoffstic;AmerPut = optPrice(inp);[AmerPutPrice,out] = genOptPrice(AmerPut)nPaths = 1.5e4;AmerPutAssetPaths = genPaths(AmerPut,nPaths);whichj = 18;whichSj = 85;whsimilar=abs(AmerPutAssetPaths(:,whichj)-whichSj)<0.05;%% Plot similar pathsfigureplot([0 AmerPut.timeDim.timeVector], ...   [repmat(inp.assetParam.initPrice,sum(whsimilar),1) AmerPutAssetPaths(whsimilar,:)],'-');axis([0 0.5 50 140])ylabel('\(S_{i}(t)\)')xlabel('\(t\)')hold onnPay = 1e6;[~,More] = genOptPayoffs(AmerPut,nPay);h = plot([0 AmerPut.timeDim.endTime],AmerPut.payoffParam.strike*[1 1],'k--', 'linewidth',5);h = [h; plot(AmerPut.timeDim.timeVector(whichj:end),More.exbound(whichj+1:end),...   '--','color',MATLABBlue,'linewidth',5)];legend(h,{'strike price','exercise boundary'},'location','northwest', ...   'box', 'off'); print -depsc AmericanPaths.eps%% Plot regressionntimeDim = size(AmerPutAssetPaths,2);cashflows = zeros(nPaths,1);basis= @(x) repmat(exp(-x/2),1,3).*[ones(numel(x),1) 1-x 1-2*x+x.*x/2];putpayoff = max(AmerPut.payoffParam.strike-AmerPutAssetPaths,0)...      .* repmat(exp(-AmerPut.assetParam.interest ...      .* AmerPut.timeDim.timeVector),nPaths,1); %discounted payoff at each timecashflow = putpayoff(:,ntimeDim);more.exbound = [zeros(1, ntimeDim) AmerPut.payoffParam.strike]; %initialize excercise boundaryfor i = ntimeDim-1:-1:whichj   inmoney = find(AmerPutAssetPaths(:,i)<AmerPut.payoffParam.strike);   if ~isempty(inmoney)      regmat=[ones(numel(inmoney),1) ...         basis(AmerPutAssetPaths(inmoney,i)/AmerPut.assetParam.initPrice)];      holdValue=regmat*(regmat\cashflow(inmoney));      if i==whichj, break, end      shouldex=inmoney(putpayoff(inmoney,i)>holdValue); %which paths should be excercised now      if ~isempty(shouldex); %some paths should be exercised         cashflow(shouldex)=putpayoff(shouldex,i); %updated cashflow         more.exbound(i+1)=max(AmerPutAssetPaths(shouldex,i)); %update exercise boundary      end   endendfigureh=plot(AmerPutAssetPaths(:,whichj),cashflow,'.','color',MATLABBlue,'markersize',10);hold onh = [h; plot(AmerPutAssetPaths(:,whichj),putpayoff(:,whichj),'k.','markersize',10)];h = [h; plot(AmerPutAssetPaths(inmoney,whichj),holdValue,'.',...   'color',MATLABOrange,'markersize',10)];h = [h; plot(AmerPutAssetPaths(whsimilar,whichj),cashflow(whsimilar),'.',...    'markersize',30,'color',MATLABGreen)];axis([50 120 0 70])hleg = legend(h([1 3 2]),...    {'\(P_{k_i}(S_{ik_i})=\) payoff at future time $k_i$',...    '\(\hat{H}_{j}(S_{ij})=\) estimated holding value',...    '\(P_{j}(S_{ij})=\) payoff at present time $j$'}, ...    'location','northeast', 'box', 'off'); xlabel('\(S_{ij}\)')print -depsc AmericanLeastSquares.eps      tocreturn[pay,option]=payoff(smat,sample,asset,option);%% Compute option price from payoffsprice=optprice(pay,sample,asset,option);timetaken=etime(clock,t0); %how long does computation take%% Output%OptionOutput